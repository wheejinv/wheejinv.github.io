{"pages":[],"posts":[{"title":"CSS 기초 문법 정리","text":"본 게시물은 생활코딩 WEBn - WEB2 - CSS 을 공부하면서 정리한 페이지 입니다. CSSCSS란 Cascading Style Sheets를 말합니다. 표준으로 제정된 HTML에서 지원할 수 없는 다양한 문자크기나 글자체, 줄 간격의 지정이 가능할 뿐 아니라 기존의 HTML 태그 기능을 확장하여 배경색상 등도 자유롭게 선택할 수 있습니다. HTML 에서 디자인의 기능을 가져온 것이 css 라고 할 수 있습니다. HTML에서 디자인하는 것보다 CSS를 통해서 디자인하는 것이 훨씬 효율적입니다. HTML 문서 내에 스타일 지정하기.style 태그를 head 태그 안에 넣어줍니다.아래 코드는 a 태그의 color 를 red 로 변경한다는 의미입니다. 1234567&lt;head&gt; &lt;style&gt; a { color: red; } &lt;/style&gt;&lt;/head&gt; 문법태그 속성에 CSS 문법의 코드를 넣는 방법.해당 태그의 style의 속성에 css 내용을 넣게 되면 이 태그만의 css 효과가 실행됩니다. 1&lt;a href=\"#\" style=\"color:red\"&gt;CSS&lt;/a&gt; 선택자아래의 코드에서 a를 선택자라고 합니다. 12345&lt;style&gt; a { color: red; }&lt;/style&gt; 구분자여러개의 효과를 지정하려면 세미콜론( ; )으로 구분합니다. 123456&lt;style&gt; a { color: red; text-decoration: none; }&lt;/style&gt; 선언, Declaration123456&lt;style&gt; a { color: red; text-decoration: none; }&lt;/style&gt; 위의 코드에서 { } 안에 있는 내용을 선언 또는 Declaration 이라고 합니다. CSS 속성이란123456&lt;style&gt; a { color: red; text-decoration: none; }&lt;/style&gt; 위의 코드에서 효과 하나( color: red; )에 대해 두가지 요소를 풀어쓰면 다음과 같습니다. Property(속성) : color Value(값) : red CSS 속성을 스스로 알아내는 방법123h1 { color: black;} 위 코드에서 h1 선택자에 font size를 변경하고 싶다면 검색어는 무엇이 적당할까요? css h1 font size property 검색하였더니 아래의 링크로 되어 있는 페이지가 나옵니다.CSS font-size property - W3Schools CSS Properties 라고 되어 있는 속성 목록이 있고 그 중에 font-size 라는 속성이 있다. 사용 예제를 참고해서 코딩을 진행하면 될 것입니다. CSS 선택자를 스스로 알아내는 방법.css 코드 12345678910111213141516171819a { color: black;}.saw { color: gray;}.saw2 { color: red;}#active { color: red;}#div a { /* id 선택자 div 를 부모 태그로 둔 a 선택자에 대한 선언 부분 */} 아래의 코드에서 우선 순위는 다음과 같다. id 선택자 active &gt; 클래스 선택자 saw &gt; 클래스 선택자 saw2 &gt; 태그 선택자 a 123&lt;div id=\"div\"&gt; &lt;a href=\"2.html\" class=\"saw\" id=\"active\"&gt;CSS&lt;/a&gt;&lt;/div&gt; 그리고 같은 선택자를 중복해서 부르는 아래의 코드에서 적용되는 순서는 아래쪽에 선언(최근에 선언된) 선택자를 따르게 됩니다.아래의 코드에서는 띄어쓰기로 두개의 선택자를 사용하고 있습니다. 1&lt;a href=\"2.html\" class=\"saw active\"&gt;CSS&lt;/a&gt; id 선택자의 주의 사항.한번 쓰면 두번은 쓰지 말자. 가능하지만 권장되지 않습니다. css 선택자의 종류css 의 선택자에도 여러 문법이 있고, 즉관적으로 해석이 어렵기 때문에 모르는 선택자 문법은 관련 레퍼런스를 참조해서 이해해야 합니다. 검색어 : css selector CSS Selector Reference block element vs inline element화면 전체를 사용하는 태그들은 block level element 라고 한다. h1 태그는 화면 전체를 씁니다. 그렇지 않는 태그들은 inline element 라고 한다. a 태그 등이 있습니다. 1234567891011h1 { display: inline;}a { display: block;}h2 { display: none;} 위의 css 를 적용시키면 html 렌더링이 재밌어 진다는 것을 알게 됩니다.h2 의 경우 display 프로퍼티의 value 를 none 으로 설정하면 화면에 보이지 않게 됩니다. Grid LayoutCSS 그리드 레이아웃(Grid Layout)은 페이지를 여러 주요 영역으로 나누거나, 크기와 위치 및 문서 계층 구조의 관점에서 HTML 기본 요소로 작성된 콘트롤 간의 관계를 정의하는 데 아주 탁월합니다. 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;style&gt; #grid{ border:5px solid pink; display:grid; grid-template-columns: 150px 1fr; } div{ border:5px solid gray; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"grid\"&gt; &lt;div&gt;NAVIGATION&lt;/div&gt; &lt;div&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.&lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 반응형 디자인화면의 크기에 따라서 웹 페이지의 요소들이 반응하여 바뀌는 것을 말합니다. 미디어 쿼리미디어 쿼리는 반응형 디자인을 할 수 있는 가장 강력한 도구입니다. 123456789101112131415161718192021222324&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;style&gt; div{ border:10px solid green; font-size:60px; } /* 화면의 크기가 0부터 800인 경우까지 div 태그를 보이지 않게 하는 미디어 쿼리 */ @media(max-width:800px) { div{ display:none; } } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt; Responsive &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; CSS 코드의 재사용 &lt;style&gt; tag 의 있는 내용을 style.css 파일로 저장합니다. 다음 style tag 를 사용하려면 html 페이지의 head 태그 밑에 아래와 같은 코드를 추가합니다. 1&lt;link rel=\"stylesheet\" href=\"style.css\"&gt;","link":"/2018/05/05/css_basic/"},{"title":"HTML 기초 문법 정리","text":"본 게시물은 생활코딩 WEBn1 - HTML &amp; Internet 을 공부하면서 정리한 페이지 입니다. HTMLHTML은 프로그래밍 언어가 아닌 마크업 언어로서 Hypertext Markup Language 의 약자입니다. HTML의 간략한 버전 별 역사는 아래와 같습니다. HTML 1.0 - 1991년 10월 HTML 2.0 - 1995년 11월 HTML 3.2 - 1997년 1월 HTML 4.0 - 1997년 12월 HTML 4.01 - 1999년 12월 HTML5 - 2008년 1월, 2014년 10월 현재 권고안 (Recommendation) 확정 ElementsHTML의 element 는 보통 여는 태그(start tag)와 닫는 태그(end tag) 안에 content 를 포함한 것입니다. 12&lt;!-- HTML Elements--&gt;&lt;p&gt;My first paragraph.&lt;/p&gt; TagHTML의 기본 구조의 핵심은 바로 태그(Tag) 입니다.태그는 해당 영역이 어떤 역할을 해야 하는지 웹 브라우저의 렌더링 엔진에 알려주는 역할을 하게 됩니다. 12&lt;!-- strong 은 태그이다. --&gt;&lt;strong&gt;creating web pages&lt;/strong&gt; 아래의 링크는 HTML 태그를 리스트한 페이지 입니다.https://www.w3schools.com/tags/default.asp 굉장히 많은 태그들이 있고 그 중에는 html5 로 오면서 새로 생긴 것들도 있네요. 모르는 것은 문서를 읽고, 테스트 해보면서 하나씩 익혀가면 될 것 같습니다. 아래 링크는 태그 별 많이 사용하는 통계에 관한 글입니다. 통계에 기반해서 빈도수가 많은 태그들을 추려내고 있습니다. 150여개의 태그 중 25가지 정도가 많이 쓰이네요.html 통계에 기반한 학습 - 생활코딩 닫지 않는 태그위의 strong 코드 예제에서도 나와있지만 열리는 태그와 닫히는 태그가 쌍으로 존재했습니다. 1&lt;h1&gt;head tag&lt;/h1&gt; 하지만 닫지 않는 태그들도 존재합니다. br, img, input, hr, meta 등이 있습니다.감싸야 하는 컨텐츠가 없기 때문에 태그를 닫지않는다는 규칙이 있는 태그들입니다. &lt;br&gt; 태그 vs &lt;p&gt; 태그단락을 표현할 때는 줄바꿈 태그 br 보다는 단락을 표현하는 태그인 p 태그가 더 좋은 선택입니다.그 이유는 단락에 단락 태그를 사용하는 것이 웹페이지를 정보로서 보다 가치있게 해주기 때문입니다. p 태그의 한계와 극복 방법. ( feat. css )br 태그는 쓰는만큼 줄바꿈이 되기 때문에 원하는 만큼 간격을 줄 수 있는 장점이 있습니다. 그래서 많은 사람들이 br 태그를 선호합니다. 하지만 CSS를 이용하면 p 태그의 한계를 극복할 수 있습니다. 1&lt;p style=\"margin-top:45px;\"&gt; 위와 같이 쓰게 되면 p 태그의 위쪽에 45px 만큼의 여백(margin)이 생깁니다. 속성(attribute)1&lt;img src=\"https://s3-ap-northeast-2.amazonaws.com/opentutorials-user-file/module/3135/7648.png\" width=\"200\"&gt; 위의 코드에서 src가 속성입니다. src 라는 속성을 통해서 이미지를 불러올 수 있습니다. width 속성에 200 값을 넣어 이미지 사이즈의 넓이를 200으로 하였습니다. 실제로 위의 코드를 수행하면 아래와 같은 사진이 불러집니다. 아래의 링크를 참조하면 img 태그에 넣을 수 있는 속성(attribute) 목록을 볼 수 있습니다. html5 에서만 지원하는 속성도 있네요.https://www.w3schools.com/tags/tag_img.asp 부모 태그와 자식 태그몇몇 태그들은 부모 자식 관계처럼 고정된 관계인 태그들이 있습니다. li 태그(list) 가 자식 태그라면 부모 태그는 ol(ordered list) 태그, ul(unordered list) 태그가 와야 합니다. 12345&lt;ol&gt; &lt;li&gt;HTML&lt;/li&gt; &lt;li&gt;CSS&lt;/li&gt; &lt;li&gt;JavaScript&lt;/li&gt;&lt;/ol&gt; 수행한 결과는 아래와 같습니다. HTML CSS JavaScript 문서의 정보를 위한 필수 태그들. &lt;head&gt; : 본문을 설명하는 태그입니다. &lt;body&gt; : 본문은 body 태그로 표시 합니다. &lt;html&gt; : body 태그와 head 태그를 감싸는 하나의 태그를 두기로 약속되어 있습니다. &lt;!doctype html&gt; : 이 웹 페이지가 HTML로서 만들어졌다는 것을 표현하기 위해서 문서의 시작에 이 태그를 추가합니다. &lt;title&gt; : 제목을 나타내는 태그이며, 검색엔진이 웹페이지를 분석할 때 가장 중요하게 생각하는 태그이기 때문에 title 태그를 쓰지 않으면 정말 큰 손해입니다. &lt;meta&gt; : 문서에 한글이 안나오고 깨지는 경우가 있는데 이런 경우 웹브라우저에게 문자 표현 방식을 알려주어야 합니다. 이 문제를 해결하기 위해 &lt;meta charset=&quot;utf-8&quot;&gt; 을 쓰면 됩니다. 아래의 html 코드는 기본적인 문서 양식입니다. 1234567891011121314151617&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;web title&lt;/title&gt; &lt;meta charset=\"utf-8\"&gt;&lt;/head&gt;&lt;body&gt; &lt;ol&gt; &lt;li&gt;HTML&lt;/li&gt; &lt;li&gt;CSS&lt;/li&gt; &lt;li&gt;JavaScript&lt;/li&gt; &lt;/ol&gt; &lt;h1&gt;HTML&lt;/h1&gt; &lt;p&gt;HTML elements are the building blocks of HTML pages. &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;","link":"/2018/05/04/html_basic/"},{"title":"지킬 환경 설정 - Disqus 연결","text":"Disqus?Disqus 는 소셜 댓글 서비스입니다. 댓글을 직접 구현하지 않고 위젯의 형태로 서비스에 삽입할 수 있는 댓글 전문 서비스입니다.아래의 링크는 생활코딩에서 disqus 계정을 생성하고 html 에서 댓글을 불러오는 튜토리얼입니다. 지킬에서의 셋팅도 아래 링크에 소개된 방법과 크게 다르지 않습니다.https://opentutorials.org/course/3084/18594 지킬 블로그에 Disqus 서비스를 삽입해보자.1. disqus 임베디드 코드제가 현재 쓰고 있는 블로그의 테마는 minima 입니다.minima 깃허브 페이지를 참고하여 disqus 가 언급되어 있는지 확인했습니다.확인해보니 _includes 폴더에 disqus_comments.html 파일이 있네요. disqus 페이지 부분을 임베디드하는 코드가 담겨있습니다. 2. post 마다 disqus 가 동작하게 하려면_layouts 폴더의 post.html 은 제가 _posts 폴더에 올리게 되는 blabla.md 파일의 layout 을 설정하는 파일입니다.내용을 보게 되면 아래 부분에 요런 코드가 있습니다. 12345...{%- if site.disqus.shortname -%} {%- include disqus_comments.html -%}{%- endif -%}... c 의 #ifdef #endif 생각나게 하는 문법의 내용이 적혀있네요. 풀이하자면 site.disqus.shortname 이란 놈이 정의가 되어 있다면 disqus_comments.html 을 포함시키겠다는 뜻이 되겠네요. 3. site.disqus.shortname 이거 뭐임.아래의 페이지를 읽어보시면, _config.yml 파일에서 설정하는 글로벌 변수이구나. 하고 알 수 있습니다.https://jekyllrb.com/docs/variables/ 설정은 _config.yml 파일에서 아래의 코드를 넣어줍니다. 123# whees-dev-blog 은 제 블로그의 disqus shortname 입니다.disqus: shortname: whees-dev-blog 4. disqus 가입하고 shortname 까지 얻어오기.최지훈님의 블로그의 글을 참조하여 disqus 가입을 진행합니다.https://cjh5414.github.io/Disqus/ shortname을 얻어오는 것은 아래의 링크를 참조했습니다.https://help.disqus.com/installation/whats-a-shortname 요약하면 disqus 에서 가입을 진행하고 site를 등록한다. disqus 사이트에서 Admin 클릭 Your Sites 설정된 지킬 블로드 선택하면 https://whees-dev-blog.disqus.com/admin/ 이런 형식의 url 이 나오게 됩니다. 주소에서 whees-dev-blog 이 부분이 shortname 이 되겠습니다. 5. Front Matter에 comments 옵션을 설정하자.포스트의 머리말(Front Matter)에comments: true옵션을 주면 됩니다. _posts 폴더에 작성되는 .md 파일에 옵션을 넣어주는 과정입니다. 아래의 링크를 참조하시면 머리말에 대해 알 수 있습니다.http://jekyllrb-ko.github.io/docs/frontmatter/ 혹은 _config.yml 에서 기본값으로 설정할 수 있습니다. 아래의 링크를 참조하시면 됩니다.http://jekyllrb-ko.github.io/docs/configuration/#front-matter-defaults referencehttps://xho95.github.io/blog/jekyll/disqus/migration/2017/01/20/Add-Disqus-to-Jekyll.html","link":"/2018/05/01/jekyll-disqus/"},{"title":"지킬 환경 설정 - 설치편","text":"Jekyll 이란Markdown 으로 문서를 작성하면, 이를 자동으로 정적인 웹 페이지로 만들어주는 재미난 녀석입니다. 제가 생각하는 지킬의 장점은 다음과 같습니다. 익숙해지면 markdown 문법으로 간단하게 문서 작성이 가능하다. Github Page 와 Jekyll 의 궁합은 넘나 좋다. (공짜에요!) 이것 저것 공부해볼 점이 많다. html 이나 css 등등 관심이 있다면 커스터마이징의 재미에 빠져 볼 수 있을 것 같다…(전 관심이 있는 걸까요 없는 걸까요 OTL) 자세한 사항은 지킬 홈페이지를 참조하면 됩니다. 윈도우에서 지킬 local 로 동작 시키기.local 에서 동작을 확인하는건 굉장히 중요하다고 생각합니다.왜냐면 아무리 에디터에서 html 등을 변환하면서 보여주는 markdown preview 기능이 있다 하더라도 100 퍼 정밀도 있게 나오지는 않습니다. 그래서 저의 글쓰기 flow 는 예전엔 아래와 같았습니다. 글을 작성한다. 작성한 글이 어떻게 나올 지 궁금해 commit &amp; push 후 10 초 정도 기다린 후 Github page 에서 변경된 점을 확인한다. 확인하고 잘 나왔네 안도의 한숨을 쉬며 다시 글을 작성. 위와 같이 했을 때의 문제점은 commit history 가 굉장히 지저분해 진다는 점입니다. 그리고 확인 시간도 은근 소요되고요. 그렇다면 지킬을 local 로 동작시키면서 작업을 하게 되면 얻는 이점은 무엇인가 로컬에서는 페이지가 바뀌면 바로 확인할 수가 있기 때문에 commit history 가 깔끔해지고 및 작업 시간이 단축됩니다. _config.yml 의 셋팅 등이 잘못되 있는 경우 에러 메시지 등을 통해 문제가 있다는 사실이 인지 가능해집니다. 초안 기능 활용이 가능합니다. (local 에서만 확인할 수 있는 기능)관련 페이지 링크 윈도우 환경에서 루비 설치는…?지킬은 Ruby 개발 환경이 있어야 됩니다. 지킬 한글 사이트 참조하지만 저의 경우에 이 루비를 윈도우 환경에서 깔면 기타 블로그에 소개된 것 처럼 깔끔하게 설치되고 하진 않았습니다.bundle 명령어에서 보통 에러가 났었습니다. 그래서 포기하고 있었는데….windows 의 powerShell 이란게 빌드인 되어 있는 것 같았고, 써보니 ls 명령어가 되는 우분투 환경이라 왠지 루비 환경 설정이 가능하지 않을까 생각이 들었습니다.전 아래의 링크를 참조해서 윈도우 개발 환경을 셋팅했습니다.https://digitaldrummerj.me/blogging-on-github-part-9-installing-jekyll-on-windows/ 단점 powerShell 에서 지킬 구동을 해야됩니다. Thema 설정하기.기본 테마를 사용합니다.minimahttps://github.com/jekyll/minima 다음의 방법을 사용했습니다. 해당 테마의 깃 허브 사이트를 방문한다. fork or clone. 취향에 맞게 선택해서 복제한다. 로컬로 돌려본다.(테마 별로 jekyll 버전에 따라서 동작하지 않는 테마도 있습니다.) commit &amp; push","link":"/2018/04/30/jekyll-setting/"},{"title":"웹에서의 JavaScript 기초","text":"본 게시물은 생활코딩 WEB2 - JavaScript 을 공부하면서 정리한 페이지 입니다.문법적인 내용은 배제하고 자바스크립트가 브라우저와 어떻게 상호작용하는지를 중점적으로 정리해보았습니다. JavaScript 실행법HTML 내에서 JavaScript 실행Script 태그를 사용해서 JavaScript 를 실행할 수 있습니다. 123456&lt;body&gt; &lt;h1&gt;JavaScript&lt;/h1&gt; &lt;script&gt; document.write('hello world'); &lt;/script&gt;&lt;/body&gt; JavaScript Event특정 태그 안에서 어떠한 이벤트(버튼을 클릭했을 때, 입력한 값이 바뀌었을 때)가 발생했을 때의 처리는 JavaScript 코드를 통해서 핸들링이 가능합니다. 아래의 코드는 버튼을 클릭했을 때의 이벤트처리와 입력 창에서 입력 내용이 바뀌었을 때 이벤트 처리에 대한 코드입니다. 12&lt;input type=\"button\" value=\"hi\" onclick=\"alert('hi')\"&gt;&lt;input type=\"text\" onchange=\"alert('changed')\"&gt; console 에서 실행 크롬 브라우저에서 마우스 우클릭 - 검사 Elements 탭에서 esc 키를 누르면 Console 창이 나오고 여기에 자바 스크립트 코드를 입력할 수 있다. 자바 스크립트가 실행되는 타겟은 현재의 HTML 문서이다. 파일로 쪼개서 정리 정돈하기.12345678910111213141516171819202122232425262728293031323334var Links = { setColor:function(color){ var alist = document.querySelectorAll('a'); var i = 0; while(i &lt; alist.length){ alist[i].style.color = color; i = i + 1; } }}var Body = { setColor:function (color){ document.querySelector('body').style.color = color; }, setBackgroundColor:function (color){ document.querySelector('body').style.backgroundColor = color; }}function nightDayHandler(self){ var target = document.querySelector('body'); if(self.value === 'night'){ Body.setBackgroundColor('black'); Body.setColor('white'); self.value = 'day'; Links.setColor('white'); } else { Body.setBackgroundColor('white'); Body.setColor('black'); self.value = 'night'; Links.setColor('blue'); }} 위의 코드는 input element를 인자로 받는 nightDayHandler 함수입니다.위 코드의 내용을 colors.js 파일로 저장한 경우에 다음과 같이 html 문서 내에서 로딩을 할 수 있습니다. 1&lt;script src=\"colors.js\"&gt;&lt;/script&gt; JavaScript 문법데이터 타입총 7개의 데이터 타입이 존재한다.아래와 6가지의 원시 데이터 타입이다. Boolean Null Undefined Number String Symbol(New In EcmaScript6) 그리고 Object 아래의 링크는 String 데이터 타입에 관련된 Methods 레퍼런스 문서이다.https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String JavaScript로 웹 브라우저 제어 방법 javascript select tag by css selector로 검색을 하게 되면 아래의 링크처럼 querySelector에 대해 알 수 있다.https://developer.mozilla.org/ko/docs/Web/API/Document/querySelector 또한 아래의 검색어로 검색을 하게 되면 JavaScript 로 백그라운드 색상을 변경하는 방법에 대한 것을 알 수 있다. 검색어의 선정이 제일 중요한 능력이 아닐까 싶습니다. javascript style background colorhttps://www.w3schools.com/jsref/prop_style_backgroundcolor.asp 1&lt;input type=\"button\" value=\"hi\" onclick=\"document.querySelector('body').style.backgroundColor = 'black';\"&gt; 아래의 코드는 input element 의 값(value) 을 비교하여 특정 동작을 수행하는 코드입니다. 1234567891011&lt;input id=\"night_day\" type=\"button\" value=\"night\" onclick=\" if(document.querySelector('#night_day').value === 'night'){ document.querySelector('body').style.backgroundColor = 'black'; document.querySelector('body').style.color = 'white'; document.querySelector('#night_day').value = 'day'; } else { document.querySelector('body').style.backgroundColor = 'white'; document.querySelector('body').style.color = 'black'; document.querySelector('#night_day').value = 'night'; } \"&gt; Library vs FrameWorkLibrary 란내가 만들고자 하는 소프트웨어의 부품들이 재사용되기 쉽게 정리되어 있는 것. 내가 만들고자 하는 소프트웨어의 부품을 가져오는 느낌.라이브러리를 땡겨와서 쓰는 느낌. 라이브러리는 톱, 망치, 삽같은 연장의 느낌.사람이 들고 썰고, 땅을 팔 수 있게 해준다. FrameWork 란우리가 만들고자 하는 것에 따라서(게임, 웹 등) 그것을 만들려고 할 때 공통적인 부분과 기획에 따라 달라지는 부분이 있을 것이다.공통적인 부분은 프레임워크로 만들고, 달라지는 부분은 살짝 구현함으로써 우리가 만들고자 하는 것을 처음부터 끝까지 만들지 않게 도와주는 반제품의 느낌.프레임워크는 우리가 들어가서 작업하는 느낌. 프레임워크는 차, 비행기, 배 같은 탈것의 느낌.사람이 타서 엔진을 켜고, 기어를 넣고, 핸들을 돌리고 조종하는 느낌. jQuery LibraryjQuery 를 사용하면 다음과 같은 JavaScript 코드를 한줄로 사용할 수 있는 장점이 있다. 아래의 코드들은 기능적으로 같은 코드이다. a 태그를 쓰는 element의 style 중 color 프로퍼티를 red 로 설정하는 코드이다. JavaScript 코드 123456&lt;script&gt;var aList = document.querySelectorAll('a');for( var i = 0; i &lt; aList.length; i++ ) { aList[i].style.color = \"red\";}&lt;/script&gt; jQuery를 사용한 코드. 123&lt;script&gt;$('a').css('color', 'red');&lt;/script&gt; 범위를 넓히기 위한 검색어들 document : 웹 페이지에 어떤 태그를 삭제하고 싶거나, 자식 태그를 추가하고 싶다면 DOM : Document Object Model 로, ducment 객체는 DOM의 일부이다. window : 현재 열려있는 웹 페이지의 주소를 알고 싶을 때, 새 창을 열고 싶을 때, 웹 브라우저의 크기를 자바스크립트로 알아야 한다면 ajax : 웹 페이지를 리로드하지 않고 정보를 변경하고 싶다면.현대적인 웹 앱을 만들 수 있는 필수 테크닉이다. cookie : 웹 페이지가 리로드되어도 현재 상태를 유지하고 싶다면.사용자를 위한 개인화된 서비스를 제공할 수 있다. webGL : 삼차원 그래픽으로 게임과 같은 것을 만들고 싶다면 offline web application webRTC speech webVR","link":"/2018/05/06/web_javascript_basic/"},{"title":"WebStorm 환경 설정","text":"WebStorm 을 사용할 때 설정하면 좋은 옵션에 대해 알아보겠습니다. 한번의 클릭으로 소스 코드 보기. 프로젝트 뷰에서 해당 파일의 소스코드를 한번의 클릭으로 보고 싶을 때 이 옵션을 쓰면 됩니다.더블 클릭이 귀찮다면 추천하는 옵션입니다. Project View - 옵션 버튼 - Autoscroll to Source 테마 설정Dracula 테마를 추천드리는 바입니다. 다크하면서 눈에 띄는 색상이 없어서 코드를 오래봐도 눈이 덜 피로한 듯한 느낌적인 느낌이 듭니다. 개인적으로 밝은색 테마들은 잘 사용하지 않습니다. Settings 창 열기 메뉴 - File - Settings 선택 (단축키 Ctrl + Alt + s) Settings 창에서 테마 설정 Apearance &amp; Behavior - Appearance - Theme선택 코드 폰트 변경개인적으로 Hack Font를 아주 즐겨쓰고 있습니다. Settings 창에서 기본 폰트 설정 Editor - Colors &amp; Fonts - Font 아래의 그림에서 abcdefg… 로 되어 있는 부분에 Hack 폰트가 적용되어 있네요. 단축키Default Keymap 보는 방법Default Keymap 셋팅을 PDF 파일로 보기. 메뉴 - Help - Keymap Reference 자주 쓰는 단축키 목록아래의 목록들은 제가 자주쓰는 단축키 목록입니다. 코드 완성 : Ctrl + Space 라인 주석 : Ctrl + / 파일 이름으로 찾기 : Shift + Shift 여러 라인 컨트롤 : Alt + click 선언으로 들어가기 : Ctrl + b, Ctrl + click 문서 탭 옮겨 다니기 : Alt + right, Alt + left Navigate forward : Ctrl + Alt + right Navigate back :Cctrl + Alt + left 찾기 : Ctrl + f 폴더내에서 찾기 : (프로젝트 뷰에서 폴더 클릭한 상태로) Ctrl + Shift + f Finds usages : Alt + F7 전체 코드 접기 : Ctrl + Shift + - 전체 코드 펼치기 : Ctrl + Shift + = Expand to level : 커스터 마이징 해서 사용. 추후 업데이트 키워드 플러그인 리뷰 및 적용 ESLint 적용 코딩 컨벤션 설정 및 적용","link":"/2018/05/13/webstorm%20setting/"}],"tags":[{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"Media Query","slug":"Media-Query","link":"/tags/Media-Query/"},{"name":"Grid Layout","slug":"Grid-Layout","link":"/tags/Grid-Layout/"},{"name":"HTML","slug":"HTML","link":"/tags/HTML/"},{"name":"Tag","slug":"Tag","link":"/tags/Tag/"},{"name":"Jekyll","slug":"Jekyll","link":"/tags/Jekyll/"},{"name":"Disqus","slug":"Disqus","link":"/tags/Disqus/"},{"name":"JavaScript","slug":"JavaScript","link":"/tags/JavaScript/"},{"name":"jQuery","slug":"jQuery","link":"/tags/jQuery/"},{"name":"WebStorm","slug":"WebStorm","link":"/tags/WebStorm/"}],"categories":[{"name":"Web","slug":"Web","link":"/categories/Web/"},{"name":"Blog","slug":"Blog","link":"/categories/Blog/"},{"name":"Settings","slug":"Settings","link":"/categories/Settings/"}]}